#! /usr/bin/python
import sys
import argparse
import urllib2
import urlparse
from urllib import urlencode
from xml.dom.minidom import parseString

# Utility to retrieve GMail Atom feed info.

TOP_LEVEL_URL = 'https://mail.google.com'
BASE_URL = 'https://mail.google.com/mail/feed/atom/'

def main():
    parser = argparse.ArgumentParser('gmail-feed')
    parser.add_argument('-u, --username', dest='username', \
                        help='your gmail login (prompted if not specified)',\
                        default=None)
    parser.add_argument('-p, --password', dest='password', \
                        help='your gmail password (prompted if not specified)',\
                        default=None)
    parser.add_argument('-l, --label', dest='label', \
                        help='gmail label to retrieve (default is `unread`)',\
                        default='unread')
    parser.add_argument('-c, --count-only', dest='count_only', \
                        help='if specified, only outputs the number of entries \
                        in the feed.', action='store_true')
    opts = parser.parse_args(sys.argv[1:])

    if opts.username is None:
        opts.username = raw_input("Username:")
    if opts.password is None:
        opts.password = raw_input("Password:")

    # Build url to open
    url = urlparse.urljoin(BASE_URL, opts.label)

    # Authentication handler
    passwd_mgr = urllib2.HTTPPasswordMgrWithDefaultRealm()
    passwd_mgr.add_password(None, TOP_LEVEL_URL, user = opts.username, \
                            passwd = opts.password)
    auth_handler = urllib2.HTTPBasicAuthHandler(passwd_mgr)
    opener = urllib2.build_opener(auth_handler)
    urllib2.install_opener(opener)

    remote = None
    try:
        remote = urllib2.urlopen(url)
        raw_feed = remote.read()
    except urllib2.HTTPError, e:
        # TODO: Display understandable message
        print "HTTP error: %s" % (e.msg)
        if e.code == 401:
          print "Perhaps you mispelled your address or made a typo while entering your password?"
        return
    except urllib2.URLError, e:
        # TODO: Display understandable message
        raise e
    finally:
        if remote is not None:
            remote.close()

    feed = parseString(raw_feed)

    entries = feed.getElementsByTagName('entry')
    if opts.count_only:
        print len(entries)
    else:
        for entry in entries:
            # Get entry data
            title = entry.getElementsByTagName('title')[0].firstChild.data
            author_email = entry.getElementsByTagName('email')[0].firstChild.data
            author_name = entry.getElementsByTagName('name')[0].firstChild.data

            # Display it
            print "%s <%s>:\t%s" % (author_name, author_email, title)

if __name__ == "__main__":
    main()
