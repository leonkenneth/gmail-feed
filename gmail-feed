#! /usr/bin/python
import sys
import getopt
import urllib2

# Utility to retrieve GMail Atom feed info.

TOP_LEVEL_URL = 'https://mail.google.com'
BASE_URL = 'https://mail.google.com/mail/feed/atom/%s'

def usage():
    # TODO
    return

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'huplc:', \
                                   ["help", "username", "password", "label", \
                                   "count"])
    except getopt.GetoptError, err:
        print str(err)
        usage()
        return

    username = None
    password = None
    label = 'unread'
    show_only_count = False

    for o, a in opts:
        if o in ('-h', '--help'):
            usage()
        if o in ('-u', '--username'):
            username = a
        if o in ('-p', '--password'):
            password = a
        if o in ('-l', '--label'):
            label = a
        if o in ('-c', '--count'):
            show_only_count = True
    
    if username is None:
        username = raw_input("Username:")
    if password is None:
        password = raw_input("Password:")

    # Build url to open
    url = BASE_URL % (label)

    # Authentication handler
    passwd_mgr = urllib2.HTTPPasswordMgrWithDefaultRealm()
    passwd_mgr.add_password(None, TOP_LEVEL_URL, user = username, \
                            passwd = password)
    auth_handler = urllib2.HTTPBasicAuthHandler(passwd_mgr)
    opener = urllib2.build_opener(auth_handler)
    urllib2.install_opener(opener)

    try:
        remote = urllib2.urlopen(url)
        raw_feed = remote.read()
    except URLError, e:
        # TODO: Display understandable message
        raise e
    except HTTPError, e:
        # TODO: Display understandable message
        raise e
    finally:
        remote.close()

    # TODO: Parse the feed
    print raw_feed


if __name__ == "__main__":
    main()
